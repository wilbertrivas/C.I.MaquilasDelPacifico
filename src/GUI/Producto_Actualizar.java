/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controladores.ControlDB_Otros;
import Controladores.ControlDB_Producto;
import Controladores.ControlDB_Unidad;
import Modelos.Producto;
import Modelos.Unidad;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class Producto_Actualizar extends javax.swing.JPanel {
    ControlDB_Unidad ControlDB_Unidad = new ControlDB_Unidad();
    DefaultTableModel modelo;
    String datos; 
    String [] titulo= {"CODIGO","NOMBRE", "TIPO","SUBPARTIDA ARANCELARIA", "UNIDAD", "ESTADO"};
    String [] registro;
    String accion="";
    Statement statement = null;
    
    public Producto_Actualizar() throws SQLException {
        initComponents();
        //Deshabilitamos los campos al iniciar###########################
        codigoP.setEnabled(false);
        descripcionP.setEnabled(false);
        tipo.setEnabled(false);
        subPartidaP.setEnabled(false);
        unidadP.setEnabled(false);
        estadoP.setEnabled(false);
        //##############################################################
        
        //Cargamos en la interfaz las unidades
        ArrayList<Unidad> listadoUnidades = new ArrayList();
        listadoUnidades=ControlDB_Unidad.ListarUnidadActivas();
        for(int i=0; i< listadoUnidades.size(); i++){
            unidadP.addItem(listadoUnidades.get(i).getDescripcion());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Seleccionar = new javax.swing.JPopupMenu();
        Editar = new javax.swing.JMenuItem();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        codigoB = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        codigoP = new javax.swing.JTextField();
        descripcionP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        estadoP = new javax.swing.JComboBox<>();
        actualizar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        subPartidaP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        unidadP = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        tipo = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();

        Editar.setText("Seleccionar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        Seleccionar.add(Editar);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setText("ACTUALIZAR PRODUCTO");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 440, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("BUSQUEDA POR CODIGO O NOMBRE:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 270, 30));

        codigoB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoBKeyPressed(evt);
            }
        });
        add(codigoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 250, 30));

        buscar.setBackground(new java.awt.Color(255, 255, 255));
        buscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/Bodega_Actualizar_Bton_Buscar.PNG"))); // NOI18N
        buscar.setText("BUSCAR");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 30, 140, -1));

        Table1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        Table1.setBackground(new java.awt.Color(153, 204, 255));
        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Table1.setComponentPopupMenu(Seleccionar);
        Table1.setFocusable(false);
        Table1.setGridColor(new java.awt.Color(0, 204, 204));
        Table1.setSelectionBackground(new java.awt.Color(255, 102, 102));
        Table1.getTableHeader().setReorderingAllowed(false);
        Table1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Table1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 580, 260));
        add(codigoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 220, 30));
        add(descripcionP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 220, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("ESTADO:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 90, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("TIPO:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 120, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("CODIGO:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 60, 30));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 1050, 10));

        estadoP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        add(estadoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 220, 30));

        actualizar.setBackground(new java.awt.Color(255, 255, 255));
        actualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/Bodega_Actualizar_Bton_Actualizar.PNG"))); // NOI18N
        actualizar.setText("ACTUALIZAR ");
        actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizarMouseClicked(evt);
            }
        });
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });
        add(actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, 170, 50));

        cancelar.setBackground(new java.awt.Color(255, 255, 255));
        cancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/Bodega_Actualizar_Bton_Cancelar.PNG"))); // NOI18N
        cancelar.setText("CANCELAR");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, 170, 50));

        limpiar.setBackground(new java.awt.Color(255, 255, 255));
        limpiar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/Interfaz_Icon_Borrar.PNG"))); // NOI18N
        limpiar.setText("LIMPIAR");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        add(limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, 140, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("SUBPARTIDA ARANCELARIA:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 180, 30));
        add(subPartidaP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 220, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("UNIDAD:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 120, 30));

        add(unidadP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 220, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("NOMBRE:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 120, 30));

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insumo", "Materia Prima" }));
        add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 220, 30));

        jLabel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 14))); // NOI18N
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 450, 320));
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        String valor=codigoB.getText();
        Table1.show();
        try {
            tabla(valor);
        } catch (SQLException ex) {
            Logger.getLogger(Producto_Actualizar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void Table1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table1KeyPressed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        // TODO lo del clik derechoo
        int fila1;
        String buscar="";
        try{
            fila1=Table1.getSelectedRow();
            if(fila1==-1){
               JOptionPane.showMessageDialog(null,"no se ha seleccionando ninguna fila");
            }
            else{
                accion="modificar";
                modelo=(DefaultTableModel)Table1.getModel();
                buscar=(String)modelo.getValueAt(fila1, 0);
                Producto product = new Producto();
                product.setId(Integer.parseInt(buscar));
                consultarParaActualizar(product);
                codigoP.setEnabled(false);
                descripcionP.setEnabled(true);
                tipo.setEnabled(true);
                subPartidaP.setEnabled(true);
                unidadP.setEnabled(true);
                estadoP.setEnabled(true);
           }
        }catch(Exception e){
        }
    }//GEN-LAST:event_EditarActionPerformed

    private void actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseClicked
        if(codigoP.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "El Campo Cogido no puede estar vacio");
        }
        else{
            if(descripcionP.getText().equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(null, "El Campo Nombre no puede estar vacio");
            }
            else{
                try{
                    Integer.parseInt(codigoP.getText());
                    ControlDB_Producto controlDB_Producto = new ControlDB_Producto();
                    ControlDB_Otros controlOtros = new ControlDB_Otros();
                    ControlDB_Unidad controlDB_Unidad = new ControlDB_Unidad();
                    Producto p = new Producto();
                    p.setId(Integer.parseInt(codigoP.getText()));
                    p.setDescripcion(descripcionP.getText());
                    p.setTipo(tipo.getSelectedItem().toString());
                    p.setSubpartidaArancelaria(subPartidaP.getText());
                    p.setUnidad_id(controlDB_Unidad.validarTipoUnidad_ID_por_Nombre(unidadP.getSelectedItem().toString()));
                    p.setEstado(controlOtros.convertidorValorEstado(estadoP.getSelectedIndex()));
                    if(codigoP.equals("")){
                        JOptionPane.showMessageDialog(null, "Datos vacio");
                    }
                    else{
                        int retorno = controlDB_Producto.actualizarProductos(p);
                        if(retorno ==1){
                            JOptionPane.showMessageDialog(null, "Actualización Exitosa");
                            tabla("");
                            codigoP.setText("");
                            descripcionP.setText("");
                            tipo.setSelectedIndex(0);
                            subPartidaP.setText("");
                            unidadP.setSelectedIndex(0);
                            estadoP.setSelectedIndex(0);
                           
                        }else{
                            JOptionPane.showMessageDialog(null, "Error al Actualizar Verifique Datos");
                        }  
                    }
                
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "El Campo codigo solo debe de tener Valores Numericos");
                }
            }   
        }
    }//GEN-LAST:event_actualizarMouseClicked

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        codigoP.setText("");
        descripcionP.setText("");
        estadoP.setSelectedIndex(0);
    }//GEN-LAST:event_cancelarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        codigoB.setText("");
    }//GEN-LAST:event_limpiarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarActionPerformed

    private void codigoBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoBKeyPressed
        String valor=codigoB.getText();
        Table1.show();
        try {
            tabla(valor);
        } catch (SQLException ex) {
            Logger.getLogger(Producto_Actualizar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_codigoBKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Editar;
    private javax.swing.JPopupMenu Seleccionar;
    private javax.swing.JTable Table1;
    private javax.swing.JButton actualizar;
    private javax.swing.JButton buscar;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField codigoB;
    private javax.swing.JTextField codigoP;
    private javax.swing.JTextField descripcionP;
    private javax.swing.JComboBox<String> estadoP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton limpiar;
    private javax.swing.JTextField subPartidaP;
    private javax.swing.JComboBox<String> tipo;
    private javax.swing.JComboBox<String> unidadP;
    // End of variables declaration//GEN-END:variables
    public void tabla(String valorConsulta) throws SQLException{
        registro = new String[6]; 
        modelo = new DefaultTableModel(null, titulo);
        ControlDB_Producto controlDB_Producto = new ControlDB_Producto();
        ControlDB_Unidad controlDB_Unidad = new ControlDB_Unidad();
        ControlDB_Otros controlOtros = new ControlDB_Otros();
        ArrayList<Producto> listadoProducto=controlDB_Producto.buscarProductos(valorConsulta);
        for(int i =0; i< listadoProducto.size(); i++){
            registro[0]=""+listadoProducto.get(i).getId();
            registro[1]=""+listadoProducto.get(i).getDescripcion();
            registro[2]=""+listadoProducto.get(i).getTipo();
            registro[3]=""+listadoProducto.get(i).getSubpartidaArancelaria();
            registro[4]=""+controlDB_Unidad.validarTipoUnidad_Nombre_por_Id(""+listadoProducto.get(i).getUnidad_id());
            registro[5]=""+controlOtros.convertidorEstadoID_x_Nombre(listadoProducto.get(i).getEstado());
            modelo.addRow(registro);
            Table1.setModel(modelo);
        }
    }
    public void consultarParaActualizar (Producto pro) throws SQLException{
        ControlDB_Producto controlProducto = new ControlDB_Producto();
        ControlDB_Unidad controlUnidad = new ControlDB_Unidad();
        ControlDB_Otros  controlOtros = new ControlDB_Otros();
        ArrayList<Producto> listadoProducto = controlProducto.consultarUnicoProducto(pro);
        for(int i =0; i< listadoProducto.size(); i++){      
            codigoP.setText(""+listadoProducto.get(i).getId());
            descripcionP.setText(""+listadoProducto.get(i).getDescripcion());
            tipo.setSelectedItem(listadoProducto.get(i).getTipo());    
            subPartidaP.setText(""+listadoProducto.get(i).getSubpartidaArancelaria());
            unidadP.setSelectedItem(controlUnidad.validarTipoUnidad_Nombre_por_Id(""+listadoProducto.get(i).getUnidad_id()));
            estadoP.setSelectedItem(controlOtros.convertidorEstadoID_x_Nombre(listadoProducto.get(i).getEstado()));    
            
        }
    }    
}
