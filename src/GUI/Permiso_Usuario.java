
package GUI;
import Controladores.ControlDB_Otros;
import Controladores.ControlDB_PermisoUsuario;
import Controladores.ControlDB_Usuario;
import Modelos.PermisoUsuario;
import Modelos.Usuario;
import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class Permiso_Usuario extends javax.swing.JPanel {
    ControlDB_Usuario controlDB_Usuario= new ControlDB_Usuario();
    DefaultTableModel modelo;
    String datos; 
    String [] titulo= {"CODIGO","USER", "NOMBRE", "APELLIDO"};
    String [] registro;
    String accion="";
    Statement statement = null;
    boolean validarCargueUsuario= false;
    public Permiso_Usuario() throws SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Seleccionar = new javax.swing.JPopupMenu();
        Editar = new javax.swing.JMenuItem();
        jLabel7 = new javax.swing.JLabel();
        nombreUsuario = new javax.swing.JLabel();
        codigoB = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        limpiar = new javax.swing.JButton();
        cliente_consultar = new javax.swing.JCheckBox();
        cliente_actualizar = new javax.swing.JCheckBox();
        cliente_registrar = new javax.swing.JCheckBox();
        proveedor_consultar = new javax.swing.JCheckBox();
        proveedor_actualizar = new javax.swing.JCheckBox();
        proveedor_registrar = new javax.swing.JCheckBox();
        compra_consultar = new javax.swing.JCheckBox();
        compra_editar = new javax.swing.JCheckBox();
        compra_registrar = new javax.swing.JCheckBox();
        compra_eliminar = new javax.swing.JCheckBox();
        compra_anular = new javax.swing.JCheckBox();
        venta_extranjera_editar = new javax.swing.JCheckBox();
        venta_modificar_dex = new javax.swing.JCheckBox();
        venta_extranjera_registrar = new javax.swing.JCheckBox();
        venta_nacional_registrar = new javax.swing.JCheckBox();
        venta_nacional_editar = new javax.swing.JCheckBox();
        venta_consultar = new javax.swing.JCheckBox();
        venta_anular = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        movimiento_camarones_editar = new javax.swing.JCheckBox();
        movimiento_camarones_registrar = new javax.swing.JCheckBox();
        movimiento_carton_registrar = new javax.swing.JCheckBox();
        movimiento_carton_editar = new javax.swing.JCheckBox();
        movimiento_consultar = new javax.swing.JCheckBox();
        movimiento_anular = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        consumo_camarones_editar = new javax.swing.JCheckBox();
        consumo_camarones_registrar = new javax.swing.JCheckBox();
        consumo_carton_registrar = new javax.swing.JCheckBox();
        consumo_carton_editar = new javax.swing.JCheckBox();
        consumo_consultar = new javax.swing.JCheckBox();
        consumo_anular = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        informe_anual_crear = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        auditoria_consultar = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        usuario_consultar = new javax.swing.JCheckBox();
        usuario_actualizar = new javax.swing.JCheckBox();
        usuario_registrar = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        empresa_local_consultar = new javax.swing.JCheckBox();
        empresa_local_actualizar = new javax.swing.JCheckBox();
        empresa_local_registrar = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        producto_consultar = new javax.swing.JCheckBox();
        producto_actualizar = new javax.swing.JCheckBox();
        producto_registrar = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        unidad_consultar = new javax.swing.JCheckBox();
        unidad_actualizar = new javax.swing.JCheckBox();
        unidad_registrar = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();
        bodega_consultar = new javax.swing.JCheckBox();
        bodega_actualizar = new javax.swing.JCheckBox();
        bodega_registrar = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        parametros_permisos_menu = new javax.swing.JCheckBox();
        parametros_permisos_usuarios = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        todos = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        codigoUsuarioT = new javax.swing.JLabel();
        codigoUsuario = new javax.swing.JLabel();
        actualizar = new javax.swing.JButton();
        ventaElectronica_extranjera_editar = new javax.swing.JCheckBox();
        ventaElectronica_modificar_dex = new javax.swing.JCheckBox();
        ventaElectronica_extranjera_registrar = new javax.swing.JCheckBox();
        ventaElectronica_nacional_registrar = new javax.swing.JCheckBox();
        ventaElectronica_nacional_editar = new javax.swing.JCheckBox();
        ventaElectronica_consultar = new javax.swing.JCheckBox();
        ventaElectronica_anular = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        ventaPapel_extranjera_editar = new javax.swing.JCheckBox();
        ventaPapel_modificar_dex = new javax.swing.JCheckBox();
        ventaPapel_extranjera_registrar = new javax.swing.JCheckBox();
        ventaPapel_nacional_registrar = new javax.swing.JCheckBox();
        ventaPapel_nacional_editar = new javax.swing.JCheckBox();
        ventaPapel_consultar = new javax.swing.JCheckBox();
        ventaPapel_anular = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();

        Editar.setText("Seleccionar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        Seleccionar.add(Editar);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setText("ACTUALIZAR USUARIOS");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 2, 440, 30));

        nombreUsuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nombreUsuario.setForeground(new java.awt.Color(51, 153, 255));
        nombreUsuario.setText("Usuario:");
        add(nombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 270, 20));

        codigoB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoBKeyPressed(evt);
            }
        });
        add(codigoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 250, 30));

        buscar.setBackground(new java.awt.Color(255, 255, 255));
        buscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/Bodega_Actualizar_Bton_Buscar.PNG"))); // NOI18N
        buscar.setText("BUSCAR");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 140, -1));

        Table1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        Table1.setBackground(new java.awt.Color(153, 204, 255));
        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Table1.setComponentPopupMenu(Seleccionar);
        Table1.setFocusable(false);
        Table1.setGridColor(new java.awt.Color(0, 204, 204));
        Table1.setSelectionBackground(new java.awt.Color(255, 102, 102));
        Table1.getTableHeader().setReorderingAllowed(false);
        Table1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Table1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 950, 100));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 1300, 10));

        limpiar.setBackground(new java.awt.Color(255, 255, 255));
        limpiar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/Interfaz_Icon_Borrar.PNG"))); // NOI18N
        limpiar.setText("LIMPIAR");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        add(limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 140, 40));

        cliente_consultar.setBackground(new java.awt.Color(255, 255, 255));
        cliente_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cliente_consultar.setText("cliente_consultar");
        add(cliente_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 150, -1));

        cliente_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        cliente_actualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cliente_actualizar.setText("cliente_actualizar");
        add(cliente_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 150, 20));

        cliente_registrar.setBackground(new java.awt.Color(255, 255, 255));
        cliente_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cliente_registrar.setText("cliente_registrar");
        add(cliente_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 150, -1));

        proveedor_consultar.setBackground(new java.awt.Color(255, 255, 255));
        proveedor_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        proveedor_consultar.setText("proveedor_consultar");
        add(proveedor_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 150, -1));

        proveedor_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        proveedor_actualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        proveedor_actualizar.setText("proveedor_actualizar");
        add(proveedor_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 150, 20));

        proveedor_registrar.setBackground(new java.awt.Color(255, 255, 255));
        proveedor_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        proveedor_registrar.setText("proveedor_registrar");
        add(proveedor_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 150, -1));

        compra_consultar.setBackground(new java.awt.Color(255, 255, 255));
        compra_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        compra_consultar.setText("compra_consultar");
        add(compra_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 150, -1));

        compra_editar.setBackground(new java.awt.Color(255, 255, 255));
        compra_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        compra_editar.setText("compra_editar");
        add(compra_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 150, 20));

        compra_registrar.setBackground(new java.awt.Color(255, 255, 255));
        compra_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        compra_registrar.setText("compra_registrar");
        add(compra_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 150, -1));

        compra_eliminar.setBackground(new java.awt.Color(255, 255, 255));
        compra_eliminar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        compra_eliminar.setText("compra_eliminar");
        add(compra_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 150, 20));

        compra_anular.setBackground(new java.awt.Color(255, 255, 255));
        compra_anular.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        compra_anular.setText("compra_anular");
        add(compra_anular, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 150, 20));

        venta_extranjera_editar.setBackground(new java.awt.Color(255, 255, 255));
        venta_extranjera_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        venta_extranjera_editar.setText("venta_extranjera_editar");
        add(venta_extranjera_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 150, -1));

        venta_modificar_dex.setBackground(new java.awt.Color(255, 255, 255));
        venta_modificar_dex.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        venta_modificar_dex.setText("venta_modificar_dex");
        add(venta_modificar_dex, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 150, 20));

        venta_extranjera_registrar.setBackground(new java.awt.Color(255, 255, 255));
        venta_extranjera_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        venta_extranjera_registrar.setText("venta_extranjera_registrar");
        add(venta_extranjera_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 190, -1));

        venta_nacional_registrar.setBackground(new java.awt.Color(255, 255, 255));
        venta_nacional_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        venta_nacional_registrar.setText("venta_nacional_registrar");
        add(venta_nacional_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 170, 20));

        venta_nacional_editar.setBackground(new java.awt.Color(255, 255, 255));
        venta_nacional_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        venta_nacional_editar.setText("venta_nacional_editar");
        add(venta_nacional_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 150, 20));

        venta_consultar.setBackground(new java.awt.Color(255, 255, 255));
        venta_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        venta_consultar.setText("venta_consultar");
        add(venta_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 150, 20));

        venta_anular.setBackground(new java.awt.Color(255, 255, 255));
        venta_anular.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        venta_anular.setText("venta_anular");
        add(venta_anular, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 150, 20));

        jLabel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMACION DEL USUARIO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 14))); // NOI18N
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 790, 0));

        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 220, 90));

        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Proveedor", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 220, 90));

        jLabel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Compra", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 220, 160));

        jLabel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Venta Computador", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 230, 190));

        movimiento_camarones_editar.setBackground(new java.awt.Color(255, 255, 255));
        movimiento_camarones_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        movimiento_camarones_editar.setText("movimiento_camarones_editar");
        add(movimiento_camarones_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 470, 190, -1));

        movimiento_camarones_registrar.setBackground(new java.awt.Color(255, 255, 255));
        movimiento_camarones_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        movimiento_camarones_registrar.setText("movimiento_camarones_registrar");
        add(movimiento_camarones_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, -1, 20));

        movimiento_carton_registrar.setBackground(new java.awt.Color(255, 255, 255));
        movimiento_carton_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        movimiento_carton_registrar.setText("movimiento_carton_registrar");
        add(movimiento_carton_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 490, 190, 20));

        movimiento_carton_editar.setBackground(new java.awt.Color(255, 255, 255));
        movimiento_carton_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        movimiento_carton_editar.setText("movimiento_carton_editar");
        add(movimiento_carton_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 510, 180, 20));

        movimiento_consultar.setBackground(new java.awt.Color(255, 255, 255));
        movimiento_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        movimiento_consultar.setText("movimiento_consultar");
        add(movimiento_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 530, 150, 20));

        movimiento_anular.setBackground(new java.awt.Color(255, 255, 255));
        movimiento_anular.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        movimiento_anular.setText("movimiento_anular");
        add(movimiento_anular, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 550, 150, 20));

        jLabel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movimiento", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 430, 230, 150));

        consumo_camarones_editar.setBackground(new java.awt.Color(255, 255, 255));
        consumo_camarones_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        consumo_camarones_editar.setText("consumo_camarones_editar");
        add(consumo_camarones_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 280, 190, -1));

        consumo_camarones_registrar.setBackground(new java.awt.Color(255, 255, 255));
        consumo_camarones_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        consumo_camarones_registrar.setText("consumo_camarones_registrar");
        add(consumo_camarones_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 260, 190, -1));

        consumo_carton_registrar.setBackground(new java.awt.Color(255, 255, 255));
        consumo_carton_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        consumo_carton_registrar.setText("consumo_carton_registrar");
        add(consumo_carton_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 300, 190, 20));

        consumo_carton_editar.setBackground(new java.awt.Color(255, 255, 255));
        consumo_carton_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        consumo_carton_editar.setText("consumo_carton_editar");
        add(consumo_carton_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 320, 180, 20));

        consumo_consultar.setBackground(new java.awt.Color(255, 255, 255));
        consumo_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        consumo_consultar.setText("consumo_consultar");
        add(consumo_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 340, 150, 20));

        consumo_anular.setBackground(new java.awt.Color(255, 255, 255));
        consumo_anular.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        consumo_anular.setText("consumo_anular");
        add(consumo_anular, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 360, 150, 20));

        jLabel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consumo", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 240, 230, 150));

        informe_anual_crear.setBackground(new java.awt.Color(255, 255, 255));
        informe_anual_crear.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        informe_anual_crear.setText("informe_anual_crear");
        add(informe_anual_crear, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 420, 150, -1));

        jLabel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informe Anual", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 400, 230, 60));

        auditoria_consultar.setBackground(new java.awt.Color(255, 255, 255));
        auditoria_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        auditoria_consultar.setText("auditoria_consultar");
        add(auditoria_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 490, 150, -1));

        jLabel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Auditoria", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 470, 230, 60));

        usuario_consultar.setBackground(new java.awt.Color(255, 255, 255));
        usuario_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        usuario_consultar.setText("usuario_consultar");
        add(usuario_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 580, 150, -1));

        usuario_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        usuario_actualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        usuario_actualizar.setText("usuario_actualizar");
        usuario_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuario_actualizarActionPerformed(evt);
            }
        });
        add(usuario_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 600, 150, 20));

        usuario_registrar.setBackground(new java.awt.Color(255, 255, 255));
        usuario_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        usuario_registrar.setText("usuario_registrar");
        add(usuario_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 560, 150, -1));

        jLabel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Usuario", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 540, 220, 90));

        empresa_local_consultar.setBackground(new java.awt.Color(255, 255, 255));
        empresa_local_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        empresa_local_consultar.setText("empresa_local_consultar");
        add(empresa_local_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 280, 150, -1));

        empresa_local_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        empresa_local_actualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        empresa_local_actualizar.setText("empresa_local_actualizar");
        add(empresa_local_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 300, 180, 20));

        empresa_local_registrar.setBackground(new java.awt.Color(255, 255, 255));
        empresa_local_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        empresa_local_registrar.setText("empresa_local_registrar");
        add(empresa_local_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 260, 150, -1));

        jLabel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Empresa Local", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 240, 230, 90));

        producto_consultar.setBackground(new java.awt.Color(255, 255, 255));
        producto_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        producto_consultar.setText("producto_consultar");
        add(producto_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 370, 150, -1));

        producto_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        producto_actualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        producto_actualizar.setText("producto_actualizar");
        add(producto_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 390, 150, 20));

        producto_registrar.setBackground(new java.awt.Color(255, 255, 255));
        producto_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        producto_registrar.setText("producto_registrar");
        add(producto_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 350, 150, -1));

        jLabel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Producto", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 330, 230, 90));

        unidad_consultar.setBackground(new java.awt.Color(255, 255, 255));
        unidad_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        unidad_consultar.setText("unidad_consultar");
        add(unidad_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 460, 150, -1));

        unidad_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        unidad_actualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        unidad_actualizar.setText("unidad_actualizar");
        add(unidad_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 480, 150, 20));

        unidad_registrar.setBackground(new java.awt.Color(255, 255, 255));
        unidad_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        unidad_registrar.setText("unidad_registrar");
        add(unidad_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 440, 150, -1));

        jLabel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Unidad", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 420, 230, 90));

        bodega_consultar.setBackground(new java.awt.Color(255, 255, 255));
        bodega_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        bodega_consultar.setText("bodega_consultar");
        add(bodega_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 560, 150, -1));

        bodega_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        bodega_actualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        bodega_actualizar.setText("bodega_actualizar");
        bodega_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bodega_actualizarActionPerformed(evt);
            }
        });
        add(bodega_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 580, 150, 20));

        bodega_registrar.setBackground(new java.awt.Color(255, 255, 255));
        bodega_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        bodega_registrar.setText("bodega_registrar");
        add(bodega_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 540, 150, -1));

        jLabel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bodega", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 520, 230, 90));

        parametros_permisos_menu.setBackground(new java.awt.Color(255, 255, 255));
        parametros_permisos_menu.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        parametros_permisos_menu.setText("parametros_permisos_menu");
        add(parametros_permisos_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 280, 180, -1));

        parametros_permisos_usuarios.setBackground(new java.awt.Color(255, 255, 255));
        parametros_permisos_usuarios.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        parametros_permisos_usuarios.setText("parametros_permisos_usuarios");
        add(parametros_permisos_usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 260, 190, -1));

        jLabel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parametros", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 240, 230, 90));

        todos.setBackground(new java.awt.Color(255, 255, 255));
        todos.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        todos.setText("Todos");
        todos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                todosStateChanged(evt);
            }
        });
        todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todosActionPerformed(evt);
            }
        });
        add(todos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("BUSQUEDA POR CODIGO O NOMBRE:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 270, 30));

        codigoUsuarioT.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        codigoUsuarioT.setForeground(new java.awt.Color(51, 153, 255));
        codigoUsuarioT.setText("Código:");
        add(codigoUsuarioT, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 60, 20));

        codigoUsuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        codigoUsuario.setForeground(new java.awt.Color(51, 153, 255));
        add(codigoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 170, 20));

        actualizar.setBackground(new java.awt.Color(255, 255, 255));
        actualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/Bodega_Actualizar_Bton_Actualizar.PNG"))); // NOI18N
        actualizar.setText("ACTUALIZAR ");
        actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizarMouseClicked(evt);
            }
        });
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });
        add(actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 630, 170, 50));

        ventaElectronica_extranjera_editar.setBackground(new java.awt.Color(255, 255, 255));
        ventaElectronica_extranjera_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaElectronica_extranjera_editar.setText("venta_extranjera_editar");
        add(ventaElectronica_extranjera_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 150, -1));

        ventaElectronica_modificar_dex.setBackground(new java.awt.Color(255, 255, 255));
        ventaElectronica_modificar_dex.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaElectronica_modificar_dex.setText("venta_modificar_dex");
        add(ventaElectronica_modificar_dex, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 570, 150, 20));

        ventaElectronica_extranjera_registrar.setBackground(new java.awt.Color(255, 255, 255));
        ventaElectronica_extranjera_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaElectronica_extranjera_registrar.setText("venta_extranjera_registrar");
        add(ventaElectronica_extranjera_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 190, -1));

        ventaElectronica_nacional_registrar.setBackground(new java.awt.Color(255, 255, 255));
        ventaElectronica_nacional_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaElectronica_nacional_registrar.setText("venta_nacional_registrar");
        add(ventaElectronica_nacional_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 170, 20));

        ventaElectronica_nacional_editar.setBackground(new java.awt.Color(255, 255, 255));
        ventaElectronica_nacional_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaElectronica_nacional_editar.setText("venta_nacional_editar");
        add(ventaElectronica_nacional_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 510, 150, 20));

        ventaElectronica_consultar.setBackground(new java.awt.Color(255, 255, 255));
        ventaElectronica_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaElectronica_consultar.setText("venta_consultar");
        add(ventaElectronica_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 530, 150, 20));

        ventaElectronica_anular.setBackground(new java.awt.Color(255, 255, 255));
        ventaElectronica_anular.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaElectronica_anular.setText("venta_anular");
        add(ventaElectronica_anular, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, 150, 20));

        jLabel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Venta Electrónica", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 430, 230, 190));

        ventaPapel_extranjera_editar.setBackground(new java.awt.Color(255, 255, 255));
        ventaPapel_extranjera_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaPapel_extranjera_editar.setText("venta_extranjera_editar");
        add(ventaPapel_extranjera_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 150, -1));

        ventaPapel_modificar_dex.setBackground(new java.awt.Color(255, 255, 255));
        ventaPapel_modificar_dex.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaPapel_modificar_dex.setText("venta_modificar_dex");
        add(ventaPapel_modificar_dex, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, 150, 20));

        ventaPapel_extranjera_registrar.setBackground(new java.awt.Color(255, 255, 255));
        ventaPapel_extranjera_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaPapel_extranjera_registrar.setText("venta_extranjera_registrar");
        add(ventaPapel_extranjera_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 190, -1));

        ventaPapel_nacional_registrar.setBackground(new java.awt.Color(255, 255, 255));
        ventaPapel_nacional_registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaPapel_nacional_registrar.setText("venta_nacional_registrar");
        add(ventaPapel_nacional_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, 170, 20));

        ventaPapel_nacional_editar.setBackground(new java.awt.Color(255, 255, 255));
        ventaPapel_nacional_editar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaPapel_nacional_editar.setText("venta_nacional_editar");
        add(ventaPapel_nacional_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 310, 150, 20));

        ventaPapel_consultar.setBackground(new java.awt.Color(255, 255, 255));
        ventaPapel_consultar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaPapel_consultar.setText("venta_consultar");
        add(ventaPapel_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, 150, 20));

        ventaPapel_anular.setBackground(new java.awt.Color(255, 255, 255));
        ventaPapel_anular.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ventaPapel_anular.setText("venta_anular");
        add(ventaPapel_anular, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 350, 150, 20));

        jLabel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Venta Papel", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, 230, 190));
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        String valor=codigoB.getText();
        Table1.show();
        try {
            tabla(valor);
        } catch (SQLException ex) {
            Logger.getLogger(Permiso_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void Table1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table1KeyPressed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        // TODO lo del clik derechoo
        int fila1;
        String buscar="";
        try{
            fila1=Table1.getSelectedRow();
            if(fila1==-1){
               JOptionPane.showMessageDialog(null,"no se ha seleccionando ninguna fila");
            }
            else{
                accion="modificar";
                modelo=(DefaultTableModel)Table1.getModel();
                buscar=(String)modelo.getValueAt(fila1, 0);
                codigoUsuario.setText((String)modelo.getValueAt(fila1, 0));
                nombreUsuario.setText("Usuario: "+(String)modelo.getValueAt(fila1, 2)+" "+(String)modelo.getValueAt(fila1, 3));
                Usuario us = new Usuario();
                us.setId(Integer.parseInt(buscar));
                validarCargueUsuario=true;
                consultarParaActualizar(us);
             
           }
        }catch(Exception e){
        }
    }//GEN-LAST:event_EditarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        codigoB.setText("");
    }//GEN-LAST:event_limpiarActionPerformed

    private void codigoBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoBKeyPressed
         String valor=codigoB.getText();
        Table1.show();
        try {
            tabla(valor);
        } catch (SQLException ex) {
            Logger.getLogger(Permiso_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_codigoBKeyPressed

    private void usuario_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuario_actualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuario_actualizarActionPerformed

    private void todosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_todosStateChanged
        
    }//GEN-LAST:event_todosStateChanged

    private void bodega_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bodega_actualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bodega_actualizarActionPerformed

    private void todosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todosActionPerformed
        if(todos.isSelected()){
            cliente_registrar.setSelected(true);
            cliente_consultar.setSelected(true);
            cliente_actualizar.setSelected(true);
            proveedor_registrar.setSelected(true);
            proveedor_consultar.setSelected(true);
            proveedor_actualizar.setSelected(true);
            compra_registrar.setSelected(true);
            compra_consultar.setSelected(true);
            compra_anular.setSelected(true);
            compra_editar.setSelected(true);
            compra_eliminar.setSelected(true);
            venta_extranjera_registrar.setSelected(true);
            venta_extranjera_editar.setSelected(true);
            venta_nacional_registrar.setSelected(true);
            venta_nacional_editar.setSelected(true);
            venta_consultar.setSelected(true);
            venta_anular.setSelected(true);
            venta_modificar_dex.setSelected(true);
            movimiento_camarones_registrar.setSelected(true);
            movimiento_camarones_editar.setSelected(true);
            movimiento_carton_registrar.setSelected(true);
            movimiento_carton_editar.setSelected(true);
            movimiento_consultar.setSelected(true);
            movimiento_anular.setSelected(true);
            consumo_camarones_registrar.setSelected(true);
            consumo_camarones_editar.setSelected(true);
            consumo_carton_registrar.setSelected(true);
            consumo_carton_editar.setSelected(true);
            consumo_consultar.setSelected(true);
            consumo_anular.setSelected(true);
            informe_anual_crear.setSelected(true);
            auditoria_consultar.setSelected(true);
            usuario_registrar.setSelected(true);
            usuario_consultar.setSelected(true);
            usuario_actualizar.setSelected(true);
            empresa_local_registrar.setSelected(true);
            empresa_local_consultar.setSelected(true);
            empresa_local_actualizar.setSelected(true);
            producto_registrar.setSelected(true);
            producto_consultar.setSelected(true);
            producto_actualizar.setSelected(true);
            unidad_registrar.setSelected(true);
            unidad_consultar.setSelected(true);
            unidad_actualizar.setSelected(true);
            bodega_registrar.setSelected(true);
            bodega_consultar.setSelected(true);
            bodega_actualizar.setSelected(true);
            parametros_permisos_usuarios.setSelected(true);
            parametros_permisos_menu.setSelected(true);
            
            ventaElectronica_extranjera_registrar.setSelected(true);
            ventaElectronica_extranjera_editar.setSelected(true);
            ventaElectronica_nacional_registrar.setSelected(true);
            ventaElectronica_nacional_editar.setSelected(true);
            ventaElectronica_consultar.setSelected(true);
            ventaElectronica_anular.setSelected(true);
            ventaElectronica_modificar_dex.setSelected(true);
            
            ventaPapel_extranjera_registrar.setSelected(true);
            ventaPapel_extranjera_editar.setSelected(true);
            ventaPapel_nacional_registrar.setSelected(true);
            ventaPapel_nacional_editar.setSelected(true);
            ventaPapel_consultar.setSelected(true);
            ventaPapel_anular.setSelected(true);
            ventaPapel_modificar_dex.setSelected(true);								
        }else{
            cliente_registrar.setSelected(false);
            cliente_consultar.setSelected(false);
            cliente_actualizar.setSelected(false);
            proveedor_registrar.setSelected(false);
            proveedor_consultar.setSelected(false);
            proveedor_actualizar.setSelected(false);
            compra_registrar.setSelected(false);
            compra_consultar.setSelected(false);
            compra_anular.setSelected(false);
            compra_editar.setSelected(false);
            compra_eliminar.setSelected(false);
            venta_extranjera_registrar.setSelected(false);
            venta_extranjera_editar.setSelected(false);
            venta_nacional_registrar.setSelected(false);
            venta_nacional_editar.setSelected(false);
            venta_consultar.setSelected(false);
            venta_anular.setSelected(false);
            venta_modificar_dex.setSelected(false);
            movimiento_camarones_registrar.setSelected(false);
            movimiento_camarones_editar.setSelected(false);
            movimiento_carton_registrar.setSelected(false);
            movimiento_carton_editar.setSelected(false);
            movimiento_consultar.setSelected(false);
            movimiento_anular.setSelected(false);
            consumo_camarones_registrar.setSelected(false);
            consumo_camarones_editar.setSelected(false);
            consumo_carton_registrar.setSelected(false);
            consumo_carton_editar.setSelected(false);
            consumo_consultar.setSelected(false);
            consumo_anular.setSelected(false);
            informe_anual_crear.setSelected(false);
            auditoria_consultar.setSelected(false);
            usuario_registrar.setSelected(false);
            usuario_consultar.setSelected(false);
            usuario_actualizar.setSelected(false);
            empresa_local_registrar.setSelected(false);
            empresa_local_consultar.setSelected(false);
            empresa_local_actualizar.setSelected(false);
            producto_registrar.setSelected(false);
            producto_consultar.setSelected(false);
            producto_actualizar.setSelected(false);
            unidad_registrar.setSelected(false);
            unidad_consultar.setSelected(false);
            unidad_actualizar.setSelected(false);
            bodega_registrar.setSelected(false);
            bodega_consultar.setSelected(false);
            bodega_actualizar.setSelected(false);
            parametros_permisos_usuarios.setSelected(false);
            parametros_permisos_menu.setSelected(false);
            
            ventaElectronica_extranjera_registrar.setSelected(false);
            ventaElectronica_extranjera_editar.setSelected(false);
            ventaElectronica_nacional_registrar.setSelected(false);
            ventaElectronica_nacional_editar.setSelected(false);
            ventaElectronica_consultar.setSelected(false);
            ventaElectronica_anular.setSelected(false);
            ventaElectronica_modificar_dex.setSelected(false);
            
            ventaPapel_extranjera_registrar.setSelected(false);
            ventaPapel_extranjera_editar.setSelected(false);
            ventaPapel_nacional_registrar.setSelected(false);
            ventaPapel_nacional_editar.setSelected(false);
            ventaPapel_consultar.setSelected(false);
            ventaPapel_anular.setSelected(false);
            ventaPapel_modificar_dex.setSelected(false);	
        }
    }//GEN-LAST:event_todosActionPerformed

    private void actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseClicked
      
    }//GEN-LAST:event_actualizarMouseClicked

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        if(validarCargueUsuario){
        ControlDB_PermisoUsuario controlDB_PermisoUsuario = new ControlDB_PermisoUsuario();
        ArrayList<PermisoUsuario> listadoPermisoUsuario = new ArrayList();
        
        //######################Cargamos la selección de los permisos y  estados de la interfaz##########################
        
        //cliente_registrar
        PermisoUsuario permisoUsuario_cliente_registrar = new PermisoUsuario();
        permisoUsuario_cliente_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_cliente_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("cliente_registrar"));
        if(cliente_registrar.isSelected()){
            permisoUsuario_cliente_registrar.setEstado(1);
        }else{
            permisoUsuario_cliente_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_cliente_registrar);
        
        //cliente_consultar
        PermisoUsuario permisoUsuario_cliente_consultar = new PermisoUsuario();
        permisoUsuario_cliente_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_cliente_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("cliente_consultar"));
        if(cliente_consultar.isSelected()){
            permisoUsuario_cliente_consultar.setEstado(1);
        }else{
            permisoUsuario_cliente_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_cliente_consultar);
        
        
        //cliente_actualizar
        PermisoUsuario permisoUsuario_cliente_actualizar = new PermisoUsuario();
        permisoUsuario_cliente_actualizar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_cliente_actualizar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("cliente_actualizar"));
        if(cliente_actualizar.isSelected()){
            permisoUsuario_cliente_actualizar.setEstado(1);
        }else{
            permisoUsuario_cliente_actualizar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_cliente_actualizar);
        
        //proveedor_registrar
        PermisoUsuario permisoUsuario_proveedor_registrar = new PermisoUsuario();
        permisoUsuario_proveedor_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_proveedor_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("proveedor_registrar"));
        if(proveedor_registrar.isSelected()){
            permisoUsuario_proveedor_registrar.setEstado(1);
        }else{
            permisoUsuario_proveedor_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_proveedor_registrar);
        
        //proveedor_consultar
        PermisoUsuario permisoUsuario_proveedor_consultar = new PermisoUsuario();
        permisoUsuario_proveedor_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_proveedor_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("proveedor_consultar"));
        if(proveedor_consultar.isSelected()){
            permisoUsuario_proveedor_consultar.setEstado(1);
        }else{
            permisoUsuario_proveedor_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_proveedor_consultar);
        
        //proveedor_actualizar
        PermisoUsuario permisoUsuario_proveedor_actualizar = new PermisoUsuario();
        permisoUsuario_proveedor_actualizar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_proveedor_actualizar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("proveedor_actualizar"));
        if(proveedor_actualizar.isSelected()){
            permisoUsuario_proveedor_actualizar.setEstado(1);
        }else{
            permisoUsuario_proveedor_actualizar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_proveedor_actualizar);
        
        //compra_registrar
        PermisoUsuario permisoUsuario_compra_registrar = new PermisoUsuario();
        permisoUsuario_compra_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_compra_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("compra_registrar"));
        if(compra_registrar.isSelected()){
            permisoUsuario_compra_registrar.setEstado(1);
        }else{
            permisoUsuario_compra_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_compra_registrar);
        
        //compra_consultar
        PermisoUsuario permisoUsuario_compra_consultar = new PermisoUsuario();
        permisoUsuario_compra_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_compra_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("compra_consultar"));
        if(compra_consultar.isSelected()){
            permisoUsuario_compra_consultar.setEstado(1);
        }else{
            permisoUsuario_compra_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_compra_consultar);
        
        //compra_anular
        PermisoUsuario permisoUsuario_compra_anular = new PermisoUsuario();
        permisoUsuario_compra_anular.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_compra_anular.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("compra_anular"));
        if(compra_anular.isSelected()){
            permisoUsuario_compra_anular.setEstado(1);
        }else{
            permisoUsuario_compra_anular.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_compra_anular);
        
        //compra_eliminar
        PermisoUsuario permisoUsuario_compra_eliminar = new PermisoUsuario();
        permisoUsuario_compra_eliminar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_compra_eliminar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("compra_eliminar"));
        if(compra_eliminar.isSelected()){
            permisoUsuario_compra_eliminar.setEstado(1);
        }else{
            permisoUsuario_compra_eliminar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_compra_eliminar);
            
        //compra_editar
        PermisoUsuario permisoUsuario_compra_editar = new PermisoUsuario();
        permisoUsuario_compra_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_compra_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("compra_editar"));
        if(compra_editar.isSelected()){
            permisoUsuario_compra_editar.setEstado(1);
        }else{
            permisoUsuario_compra_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_compra_editar);
        
        //venta_extranjera_registrar
        PermisoUsuario permisoUsuario_venta_extranjera_registrar = new PermisoUsuario();
        permisoUsuario_venta_extranjera_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_venta_extranjera_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("venta_extranjera_registrar"));
        if(venta_extranjera_registrar.isSelected()){
            permisoUsuario_venta_extranjera_registrar.setEstado(1);
        }else{
            permisoUsuario_venta_extranjera_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_venta_extranjera_registrar);
        
        //venta_extranjera_editar
        PermisoUsuario permisoUsuario_venta_extranjera_editar = new PermisoUsuario();
        permisoUsuario_venta_extranjera_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_venta_extranjera_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("venta_extranjera_editar"));
        if(venta_extranjera_editar.isSelected()){
            permisoUsuario_venta_extranjera_editar.setEstado(1);
        }else{
            permisoUsuario_venta_extranjera_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_venta_extranjera_editar);
        
        //venta_nacional_registrar
        PermisoUsuario permisoUsuario_venta_nacional_registrar = new PermisoUsuario();
        permisoUsuario_venta_nacional_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_venta_nacional_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("venta_nacional_registrar"));
        if(venta_nacional_registrar.isSelected()){
            permisoUsuario_venta_nacional_registrar.setEstado(1);
        }else{
            permisoUsuario_venta_nacional_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_venta_nacional_registrar);
        
        //venta_nacional_editar
        PermisoUsuario permisoUsuario_venta_nacional_editar = new PermisoUsuario();
        permisoUsuario_venta_nacional_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_venta_nacional_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("venta_nacional_editar"));
        if(venta_nacional_editar.isSelected()){
            permisoUsuario_venta_nacional_editar.setEstado(1);
        }else{
            permisoUsuario_venta_nacional_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_venta_nacional_editar);
        
        //venta_consultar
        PermisoUsuario permisoUsuario_venta_consultar = new PermisoUsuario();
        permisoUsuario_venta_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_venta_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("venta_consultar"));
        if(venta_consultar.isSelected()){
            permisoUsuario_venta_consultar.setEstado(1);
        }else{
            permisoUsuario_venta_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_venta_consultar);
        
        //venta_anular
        PermisoUsuario permisoUsuario_venta_anular = new PermisoUsuario();
        permisoUsuario_venta_anular.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_venta_anular.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("venta_anular"));
        if(venta_anular.isSelected()){
            permisoUsuario_venta_anular.setEstado(1);
        }else{
            permisoUsuario_venta_anular.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_venta_anular);
        
        //venta_modificar_dex
        PermisoUsuario permisoUsuario_venta_modificar_dex = new PermisoUsuario();
        permisoUsuario_venta_modificar_dex.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_venta_modificar_dex.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("venta_modificar_dex"));
        if(venta_modificar_dex.isSelected()){
            permisoUsuario_venta_modificar_dex.setEstado(1);
        }else{
            permisoUsuario_venta_modificar_dex.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_venta_modificar_dex);
        //...................................................................................................................
         //ventaElectronica_extranjera_registrar
        PermisoUsuario permisoUsuario_ventaElectronica_extranjera_registrar = new PermisoUsuario();
        permisoUsuario_ventaElectronica_extranjera_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaElectronica_extranjera_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaElectronica_extranjera_registrar"));
        if(ventaElectronica_extranjera_registrar.isSelected()){
            permisoUsuario_ventaElectronica_extranjera_registrar.setEstado(1);
        }else{
            permisoUsuario_ventaElectronica_extranjera_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaElectronica_extranjera_registrar);
        
        //ventaElectronica_extranjera_editar
        PermisoUsuario permisoUsuario_ventaElectronica_extranjera_editar = new PermisoUsuario();
        permisoUsuario_ventaElectronica_extranjera_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaElectronica_extranjera_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaElectronica_extranjera_editar"));
        if(ventaElectronica_extranjera_editar.isSelected()){
            permisoUsuario_ventaElectronica_extranjera_editar.setEstado(1);
        }else{
            permisoUsuario_ventaElectronica_extranjera_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaElectronica_extranjera_editar);
        
        //ventaElectronica_nacional_registrar
        PermisoUsuario permisoUsuario_ventaElectronica_nacional_registrar = new PermisoUsuario();
        permisoUsuario_ventaElectronica_nacional_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaElectronica_nacional_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaElectronica_nacional_registrar"));
        if(ventaElectronica_nacional_registrar.isSelected()){
            permisoUsuario_ventaElectronica_nacional_registrar.setEstado(1);
        }else{
            permisoUsuario_ventaElectronica_nacional_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaElectronica_nacional_registrar);
        
        //ventaElectronica_nacional_editar
        PermisoUsuario permisoUsuario_ventaElectronica_nacional_editar = new PermisoUsuario();
        permisoUsuario_ventaElectronica_nacional_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaElectronica_nacional_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaElectronica_nacional_editar"));
        if(ventaElectronica_nacional_editar.isSelected()){
            permisoUsuario_ventaElectronica_nacional_editar.setEstado(1);
        }else{
            permisoUsuario_ventaElectronica_nacional_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaElectronica_nacional_editar);
        
        //ventaElectronica_consultar
        PermisoUsuario permisoUsuario_ventaElectronica_consultar = new PermisoUsuario();
        permisoUsuario_ventaElectronica_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaElectronica_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaElectronica_consultar"));
        if(ventaElectronica_consultar.isSelected()){
            permisoUsuario_ventaElectronica_consultar.setEstado(1);
        }else{
            permisoUsuario_ventaElectronica_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaElectronica_consultar);
        
        //ventaElectronica_anular
        PermisoUsuario permisoUsuario_ventaElectronica_anular = new PermisoUsuario();
        permisoUsuario_ventaElectronica_anular.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaElectronica_anular.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaElectronica_anular"));
        if(ventaElectronica_anular.isSelected()){
            permisoUsuario_ventaElectronica_anular.setEstado(1);
        }else{
            permisoUsuario_ventaElectronica_anular.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaElectronica_anular);
        
        //ventaElectronica_modificar_dex
        PermisoUsuario permisoUsuario_ventaElectronica_modificar_dex = new PermisoUsuario();
        permisoUsuario_ventaElectronica_modificar_dex.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaElectronica_modificar_dex.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaElectronica_modificar_dex"));
        if(ventaElectronica_modificar_dex.isSelected()){
            permisoUsuario_ventaElectronica_modificar_dex.setEstado(1);
        }else{
            permisoUsuario_ventaElectronica_modificar_dex.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaElectronica_modificar_dex);
        //..................................................................................................................
        
        //...................................................................................................................
         //ventaPapel_extranjera_registrar
        PermisoUsuario permisoUsuario_ventaPapel_extranjera_registrar = new PermisoUsuario();
        permisoUsuario_ventaPapel_extranjera_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaPapel_extranjera_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaPapel_extranjera_registrar"));
        if(ventaPapel_extranjera_registrar.isSelected()){
            permisoUsuario_ventaPapel_extranjera_registrar.setEstado(1);
        }else{
            permisoUsuario_ventaPapel_extranjera_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaPapel_extranjera_registrar);
        
        //ventaPapel_extranjera_editar
        PermisoUsuario permisoUsuario_ventaPapel_extranjera_editar = new PermisoUsuario();
        permisoUsuario_ventaPapel_extranjera_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaPapel_extranjera_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaPapel_extranjera_editar"));
        if(ventaPapel_extranjera_editar.isSelected()){
            permisoUsuario_ventaPapel_extranjera_editar.setEstado(1);
        }else{
            permisoUsuario_ventaPapel_extranjera_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaPapel_extranjera_editar);
        
        //ventaPapel_nacional_registrar
        PermisoUsuario permisoUsuario_ventaPapel_nacional_registrar = new PermisoUsuario();
        permisoUsuario_ventaPapel_nacional_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaPapel_nacional_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaPapel_nacional_registrar"));
        if(ventaPapel_nacional_registrar.isSelected()){
            permisoUsuario_ventaPapel_nacional_registrar.setEstado(1);
        }else{
            permisoUsuario_ventaPapel_nacional_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaPapel_nacional_registrar);
        
        //ventaPapel_nacional_editar
        PermisoUsuario permisoUsuario_ventaPapel_nacional_editar = new PermisoUsuario();
        permisoUsuario_ventaPapel_nacional_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaPapel_nacional_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaPapel_nacional_editar"));
        if(ventaPapel_nacional_editar.isSelected()){
            permisoUsuario_ventaPapel_nacional_editar.setEstado(1);
        }else{
            permisoUsuario_ventaPapel_nacional_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaPapel_nacional_editar);
        
        //ventaPapel_consultar
        PermisoUsuario permisoUsuario_ventaPapel_consultar = new PermisoUsuario();
        permisoUsuario_ventaPapel_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaPapel_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaPapel_consultar"));
        if(ventaPapel_consultar.isSelected()){
            permisoUsuario_ventaPapel_consultar.setEstado(1);
        }else{
            permisoUsuario_ventaPapel_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaPapel_consultar);
        
        //ventaPapel_anular
        PermisoUsuario permisoUsuario_ventaPapel_anular = new PermisoUsuario();
        permisoUsuario_ventaPapel_anular.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaPapel_anular.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaPapel_anular"));
        if(ventaPapel_anular.isSelected()){
            permisoUsuario_ventaPapel_anular.setEstado(1);
        }else{
            permisoUsuario_ventaPapel_anular.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaPapel_anular);
        
        //ventaPapel_modificar_dex
        PermisoUsuario permisoUsuario_ventaPapel_modificar_dex = new PermisoUsuario();
        permisoUsuario_ventaPapel_modificar_dex.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_ventaPapel_modificar_dex.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("ventaPapel_modificar_dex"));
        if(ventaPapel_modificar_dex.isSelected()){
            permisoUsuario_ventaPapel_modificar_dex.setEstado(1);
        }else{
            permisoUsuario_ventaPapel_modificar_dex.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_ventaPapel_modificar_dex);
        //..................................................................................................................
        //movimiento_camarones_registrar
        PermisoUsuario permisoUsuario_movimiento_camarones_registrar = new PermisoUsuario();
        permisoUsuario_movimiento_camarones_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_movimiento_camarones_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("movimiento_camarones_registrar"));
        if(movimiento_camarones_registrar.isSelected()){
            permisoUsuario_movimiento_camarones_registrar.setEstado(1);
        }else{
            permisoUsuario_movimiento_camarones_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_movimiento_camarones_registrar);
        
        //movimiento_camarones_editar
        PermisoUsuario permisoUsuario_movimiento_camarones_editar = new PermisoUsuario();
        permisoUsuario_movimiento_camarones_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_movimiento_camarones_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("movimiento_camarones_editar"));
        if(movimiento_camarones_editar.isSelected()){
            permisoUsuario_movimiento_camarones_editar.setEstado(1);
        }else{
            permisoUsuario_movimiento_camarones_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_movimiento_camarones_editar);
        
        //movimiento_carton_registrar
        PermisoUsuario permisoUsuario_movimiento_carton_registrar = new PermisoUsuario();
        permisoUsuario_movimiento_carton_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_movimiento_carton_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("movimiento_carton_registrar"));
        if(movimiento_carton_registrar.isSelected()){
            permisoUsuario_movimiento_carton_registrar.setEstado(1);
        }else{
            permisoUsuario_movimiento_carton_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_movimiento_carton_registrar);
        
        //movimiento_carton_editar
        PermisoUsuario permisoUsuario_movimiento_carton_editar = new PermisoUsuario();
        permisoUsuario_movimiento_carton_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_movimiento_carton_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("movimiento_carton_editar"));
        if(movimiento_carton_editar.isSelected()){
            permisoUsuario_movimiento_carton_editar.setEstado(1);
        }else{
            permisoUsuario_movimiento_carton_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_movimiento_carton_editar);
        
        //movimiento_consultar
        PermisoUsuario permisoUsuario_movimiento_consultar = new PermisoUsuario();
        permisoUsuario_movimiento_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_movimiento_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("movimiento_consultar"));
        if(movimiento_consultar.isSelected()){
            permisoUsuario_movimiento_consultar.setEstado(1);
        }else{
            permisoUsuario_movimiento_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_movimiento_consultar);
        
        //movimiento_anular
        PermisoUsuario permisoUsuario_movimiento_anular = new PermisoUsuario();
        permisoUsuario_movimiento_anular.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_movimiento_anular.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("movimiento_anular"));
        if(movimiento_anular.isSelected()){
            permisoUsuario_movimiento_anular.setEstado(1);
        }else{
            permisoUsuario_movimiento_anular.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_movimiento_anular);
        
        //consumo_camarones_registrar
        PermisoUsuario permisoUsuario_consumo_camarones_registrar = new PermisoUsuario();
        permisoUsuario_consumo_camarones_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_consumo_camarones_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("consumo_camarones_registrar"));
        if(consumo_camarones_registrar.isSelected()){
            permisoUsuario_consumo_camarones_registrar.setEstado(1);
        }else{
            permisoUsuario_consumo_camarones_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_consumo_camarones_registrar);
        
        //consumo_camarones_editar
        PermisoUsuario permisoUsuario_consumo_camarones_editar = new PermisoUsuario();
        permisoUsuario_consumo_camarones_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_consumo_camarones_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("consumo_camarones_editar"));
        if(consumo_camarones_editar.isSelected()){
            permisoUsuario_consumo_camarones_editar.setEstado(1);
        }else{
            permisoUsuario_consumo_camarones_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_consumo_camarones_editar);
        
        //consumo_carton_registrar
        PermisoUsuario permisoUsuario_consumo_carton_registrar = new PermisoUsuario();
        permisoUsuario_consumo_carton_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_consumo_carton_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("consumo_carton_registrar"));
        if(consumo_carton_registrar.isSelected()){
            permisoUsuario_consumo_carton_registrar.setEstado(1);
        }else{
            permisoUsuario_consumo_carton_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_consumo_carton_registrar);
        
        //consumo_carton_editar
        PermisoUsuario permisoUsuario_consumo_carton_editar = new PermisoUsuario();
        permisoUsuario_consumo_carton_editar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_consumo_carton_editar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("consumo_carton_editar"));
        if(consumo_carton_editar.isSelected()){
            permisoUsuario_consumo_carton_editar.setEstado(1);
        }else{
            permisoUsuario_consumo_carton_editar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_consumo_carton_editar);
        
        //consumo_consultar
        PermisoUsuario permisoUsuario_consumo_consultar = new PermisoUsuario();
        permisoUsuario_consumo_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_consumo_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("consumo_consultar"));
        if(consumo_consultar.isSelected()){
            permisoUsuario_consumo_consultar.setEstado(1);
        }else{
            permisoUsuario_consumo_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_consumo_consultar);
        
        //consumo_anular
        PermisoUsuario permisoUsuario_consumo_anular = new PermisoUsuario();
        permisoUsuario_consumo_anular.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_consumo_anular.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("consumo_anular"));
        if(consumo_anular.isSelected()){
            permisoUsuario_consumo_anular.setEstado(1);
        }else{
            permisoUsuario_consumo_anular.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_consumo_anular);
        
        //informe_anual_crear
        PermisoUsuario permisoUsuario_informe_anual_crear = new PermisoUsuario();
        permisoUsuario_informe_anual_crear.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_informe_anual_crear.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("informe_anual_crear"));
        if(informe_anual_crear.isSelected()){
            permisoUsuario_informe_anual_crear.setEstado(1);
        }else{
            permisoUsuario_informe_anual_crear.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_informe_anual_crear);
        
        //auditoria_consultar
        PermisoUsuario permisoUsuario_auditoria_consultar = new PermisoUsuario();
        permisoUsuario_auditoria_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_auditoria_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("auditoria_consultar"));
        if(auditoria_consultar.isSelected()){
            permisoUsuario_auditoria_consultar.setEstado(1);
        }else{
            permisoUsuario_auditoria_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_auditoria_consultar);
        
        //usuario_registrar
        PermisoUsuario permisoUsuario_usuario_registrar = new PermisoUsuario();
        permisoUsuario_usuario_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_usuario_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("usuario_registrar"));
        if(usuario_registrar.isSelected()){
            permisoUsuario_usuario_registrar.setEstado(1);
        }else{
            permisoUsuario_usuario_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_usuario_registrar);
        
        //usuario_consultar
        PermisoUsuario permisoUsuario_usuario_consultar = new PermisoUsuario();
        permisoUsuario_usuario_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_usuario_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("usuario_consultar"));
        if(usuario_consultar.isSelected()){
            permisoUsuario_usuario_consultar.setEstado(1);
        }else{
            permisoUsuario_usuario_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_usuario_consultar);
        
        //usuario_actualizar
        PermisoUsuario permisoUsuario_usuario_actualizar = new PermisoUsuario();
        permisoUsuario_usuario_actualizar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_usuario_actualizar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("usuario_actualizar"));
        if(usuario_actualizar.isSelected()){
            permisoUsuario_usuario_actualizar.setEstado(1);
        }else{
            permisoUsuario_usuario_actualizar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_usuario_actualizar);
        
        //empresa_local_registrar
        PermisoUsuario permisoUsuario_empresa_local_registrar = new PermisoUsuario();
        permisoUsuario_empresa_local_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_empresa_local_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("empresa_local_registrar"));
        if(empresa_local_registrar.isSelected()){
            permisoUsuario_empresa_local_registrar.setEstado(1);
        }else{
            permisoUsuario_empresa_local_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_empresa_local_registrar);
        
        //empresa_local_consultar
        PermisoUsuario permisoUsuario_empresa_local_consultar = new PermisoUsuario();
        permisoUsuario_empresa_local_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_empresa_local_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("empresa_local_consultar"));
        if(empresa_local_consultar.isSelected()){
            permisoUsuario_empresa_local_consultar.setEstado(1);
        }else{
            permisoUsuario_empresa_local_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_empresa_local_consultar);
        
        //empresa_local_actualizar
        PermisoUsuario permisoUsuario_empresa_local_actualizar = new PermisoUsuario();
        permisoUsuario_empresa_local_actualizar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_empresa_local_actualizar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("empresa_local_actualizar"));
        if(empresa_local_actualizar.isSelected()){
            permisoUsuario_empresa_local_actualizar.setEstado(1);
        }else{
            permisoUsuario_empresa_local_actualizar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_empresa_local_actualizar);
        
        //producto_registrar
        PermisoUsuario permisoUsuario_producto_registrar = new PermisoUsuario();
        permisoUsuario_producto_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_producto_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("producto_registrar"));
        if(producto_registrar.isSelected()){
            permisoUsuario_producto_registrar.setEstado(1);
        }else{
            permisoUsuario_producto_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_producto_registrar);
        
        //producto_consultar
        PermisoUsuario permisoUsuario_producto_consultar = new PermisoUsuario();
        permisoUsuario_producto_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_producto_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("producto_consultar"));
        if(producto_consultar.isSelected()){
            permisoUsuario_producto_consultar.setEstado(1);
        }else{
            permisoUsuario_producto_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_producto_consultar);
        
        //producto_actualizar
        PermisoUsuario permisoUsuario_producto_actualizar = new PermisoUsuario();
        permisoUsuario_producto_actualizar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_producto_actualizar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("producto_actualizar"));
        if(producto_actualizar.isSelected()){
            permisoUsuario_producto_actualizar.setEstado(1);
        }else{
            permisoUsuario_producto_actualizar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_producto_actualizar);
        
        //unidad_registrar
        PermisoUsuario permisoUsuario_unidad_registrar = new PermisoUsuario();
        permisoUsuario_unidad_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_unidad_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("unidad_registrar"));
        if(unidad_registrar.isSelected()){
            permisoUsuario_unidad_registrar.setEstado(1);
        }else{
            permisoUsuario_unidad_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_unidad_registrar);
        
        //unidad_consultar
        PermisoUsuario permisoUsuario_unidad_consultar = new PermisoUsuario();
        permisoUsuario_unidad_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_unidad_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("unidad_consultar"));
        if(unidad_consultar.isSelected()){
            permisoUsuario_unidad_consultar.setEstado(1);
        }else{
            permisoUsuario_unidad_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_unidad_consultar);
        
        //unidad_actualizar
        PermisoUsuario permisoUsuario_unidad_actualizar = new PermisoUsuario();
        permisoUsuario_unidad_actualizar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_unidad_actualizar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("unidad_actualizar"));
        if(unidad_actualizar.isSelected()){
            permisoUsuario_unidad_actualizar.setEstado(1);
        }else{
            permisoUsuario_unidad_actualizar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_unidad_actualizar);
        
        //bodega_registrar
        PermisoUsuario permisoUsuario_bodega_registrar = new PermisoUsuario();
        permisoUsuario_bodega_registrar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_bodega_registrar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("bodega_registrar"));
        if(bodega_registrar.isSelected()){
            permisoUsuario_bodega_registrar.setEstado(1);
        }else{
            permisoUsuario_bodega_registrar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_bodega_registrar);
        
        //bodega_consultar
        PermisoUsuario permisoUsuario_bodega_consultar = new PermisoUsuario();
        permisoUsuario_bodega_consultar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_bodega_consultar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("bodega_consultar"));
        if(bodega_consultar.isSelected()){
            permisoUsuario_bodega_consultar.setEstado(1);
        }else{
            permisoUsuario_bodega_consultar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_bodega_consultar);
        
        //bodega_actualizar
        PermisoUsuario permisoUsuario_bodega_actualizar = new PermisoUsuario();
        permisoUsuario_bodega_actualizar.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_bodega_actualizar.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("bodega_actualizar"));
        if(bodega_actualizar.isSelected()){
            permisoUsuario_bodega_actualizar.setEstado(1);
        }else{
            permisoUsuario_bodega_actualizar.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_bodega_actualizar);
        
        //parametros_permisos_usuarios
        PermisoUsuario permisoUsuario_parametros_permisos_usuarios = new PermisoUsuario();
        permisoUsuario_parametros_permisos_usuarios.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_parametros_permisos_usuarios.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("parametros_permisos_usuarios"));
        if(parametros_permisos_usuarios.isSelected()){
            permisoUsuario_parametros_permisos_usuarios.setEstado(1);
        }else{
            permisoUsuario_parametros_permisos_usuarios.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_parametros_permisos_usuarios);
        
        //parametros_permisos_menu
        PermisoUsuario permisoUsuario_parametros_permisos_menu = new PermisoUsuario();
        permisoUsuario_parametros_permisos_menu.setUsuario_id(Integer.parseInt(codigoUsuario.getText()));
        permisoUsuario_parametros_permisos_menu.setPermisos_id(controlDB_PermisoUsuario.retornarIdPermiso("parametros_permisos_menu"));
        if(parametros_permisos_menu.isSelected()){
            permisoUsuario_parametros_permisos_menu.setEstado(1);
        }else{
            permisoUsuario_parametros_permisos_menu.setEstado(0);
        }
        listadoPermisoUsuario.add(permisoUsuario_parametros_permisos_menu);
        
        try {
            controlDB_PermisoUsuario.actualizarPermisoUsuario(listadoPermisoUsuario);
            JOptionPane.showMessageDialog(null, "Actualización de Permisos exitosa");
            cliente_registrar.setSelected(false);
            cliente_consultar.setSelected(false);
            cliente_actualizar.setSelected(false);
            proveedor_registrar.setSelected(false);
            proveedor_consultar.setSelected(false);
            proveedor_actualizar.setSelected(false);
            compra_registrar.setSelected(false);
            compra_consultar.setSelected(false);
            compra_anular.setSelected(false);
            compra_eliminar.setSelected(false);
            compra_editar.setSelected(false);
            venta_extranjera_registrar.setSelected(false);
            venta_extranjera_editar.setSelected(false);
            venta_nacional_registrar.setSelected(false);
            venta_nacional_editar.setSelected(false);
            venta_consultar.setSelected(false);
            venta_anular.setSelected(false);
            venta_modificar_dex.setSelected(false);
            movimiento_camarones_registrar.setSelected(false);
            movimiento_camarones_editar.setSelected(false);
            movimiento_carton_registrar.setSelected(false);
            movimiento_carton_editar.setSelected(false);
            movimiento_consultar.setSelected(false);
            movimiento_anular.setSelected(false);
            consumo_camarones_registrar.setSelected(false);
            consumo_camarones_editar.setSelected(false);
            consumo_carton_registrar.setSelected(false);
            consumo_carton_editar.setSelected(false);
            consumo_consultar.setSelected(false);
            consumo_anular.setSelected(false);
            informe_anual_crear.setSelected(false);
            auditoria_consultar.setSelected(false);
            usuario_registrar.setSelected(false);
            usuario_consultar.setSelected(false);
            usuario_actualizar.setSelected(false);
            empresa_local_registrar.setSelected(false);
            empresa_local_consultar.setSelected(false);
            empresa_local_actualizar.setSelected(false);
            producto_registrar.setSelected(false);
            producto_consultar.setSelected(false);
            producto_actualizar.setSelected(false);
            unidad_registrar.setSelected(false);
            unidad_consultar.setSelected(false);
            unidad_actualizar.setSelected(false);
            bodega_registrar.setSelected(false);
            bodega_consultar.setSelected(false);
            bodega_actualizar.setSelected(false);
            parametros_permisos_usuarios.setSelected(false);
            parametros_permisos_menu.setSelected(false);
            
            ventaElectronica_extranjera_registrar.setSelected(false);
            ventaElectronica_extranjera_editar.setSelected(false);
            ventaElectronica_nacional_registrar.setSelected(false);
            ventaElectronica_nacional_editar.setSelected(false);
            ventaElectronica_consultar.setSelected(false);
            ventaElectronica_anular.setSelected(false);
            ventaElectronica_modificar_dex.setSelected(false);
            
            ventaPapel_extranjera_registrar.setSelected(false);
            ventaPapel_extranjera_editar.setSelected(false);
            ventaPapel_nacional_registrar.setSelected(false);
            ventaPapel_nacional_editar.setSelected(false);
            ventaPapel_consultar.setSelected(false);
            ventaPapel_anular.setSelected(false);
            ventaPapel_modificar_dex.setSelected(false);	
            todos.setSelected(false);           
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Permiso_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Permiso_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(null, "No se ha cargado un Usuario");
        }
    }//GEN-LAST:event_actualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Editar;
    private javax.swing.JPopupMenu Seleccionar;
    private javax.swing.JTable Table1;
    private javax.swing.JButton actualizar;
    private javax.swing.JCheckBox auditoria_consultar;
    private javax.swing.JCheckBox bodega_actualizar;
    private javax.swing.JCheckBox bodega_consultar;
    private javax.swing.JCheckBox bodega_registrar;
    private javax.swing.JButton buscar;
    private javax.swing.JCheckBox cliente_actualizar;
    private javax.swing.JCheckBox cliente_consultar;
    private javax.swing.JCheckBox cliente_registrar;
    private javax.swing.JTextField codigoB;
    private javax.swing.JLabel codigoUsuario;
    private javax.swing.JLabel codigoUsuarioT;
    private javax.swing.JCheckBox compra_anular;
    private javax.swing.JCheckBox compra_consultar;
    private javax.swing.JCheckBox compra_editar;
    private javax.swing.JCheckBox compra_eliminar;
    private javax.swing.JCheckBox compra_registrar;
    private javax.swing.JCheckBox consumo_anular;
    private javax.swing.JCheckBox consumo_camarones_editar;
    private javax.swing.JCheckBox consumo_camarones_registrar;
    private javax.swing.JCheckBox consumo_carton_editar;
    private javax.swing.JCheckBox consumo_carton_registrar;
    private javax.swing.JCheckBox consumo_consultar;
    private javax.swing.JCheckBox empresa_local_actualizar;
    private javax.swing.JCheckBox empresa_local_consultar;
    private javax.swing.JCheckBox empresa_local_registrar;
    private javax.swing.JCheckBox informe_anual_crear;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton limpiar;
    private javax.swing.JCheckBox movimiento_anular;
    private javax.swing.JCheckBox movimiento_camarones_editar;
    private javax.swing.JCheckBox movimiento_camarones_registrar;
    private javax.swing.JCheckBox movimiento_carton_editar;
    private javax.swing.JCheckBox movimiento_carton_registrar;
    private javax.swing.JCheckBox movimiento_consultar;
    private javax.swing.JLabel nombreUsuario;
    private javax.swing.JCheckBox parametros_permisos_menu;
    private javax.swing.JCheckBox parametros_permisos_usuarios;
    private javax.swing.JCheckBox producto_actualizar;
    private javax.swing.JCheckBox producto_consultar;
    private javax.swing.JCheckBox producto_registrar;
    private javax.swing.JCheckBox proveedor_actualizar;
    private javax.swing.JCheckBox proveedor_consultar;
    private javax.swing.JCheckBox proveedor_registrar;
    private javax.swing.JCheckBox todos;
    private javax.swing.JCheckBox unidad_actualizar;
    private javax.swing.JCheckBox unidad_consultar;
    private javax.swing.JCheckBox unidad_registrar;
    private javax.swing.JCheckBox usuario_actualizar;
    private javax.swing.JCheckBox usuario_consultar;
    private javax.swing.JCheckBox usuario_registrar;
    private javax.swing.JCheckBox ventaElectronica_anular;
    private javax.swing.JCheckBox ventaElectronica_consultar;
    private javax.swing.JCheckBox ventaElectronica_extranjera_editar;
    private javax.swing.JCheckBox ventaElectronica_extranjera_registrar;
    private javax.swing.JCheckBox ventaElectronica_modificar_dex;
    private javax.swing.JCheckBox ventaElectronica_nacional_editar;
    private javax.swing.JCheckBox ventaElectronica_nacional_registrar;
    private javax.swing.JCheckBox ventaPapel_anular;
    private javax.swing.JCheckBox ventaPapel_consultar;
    private javax.swing.JCheckBox ventaPapel_extranjera_editar;
    private javax.swing.JCheckBox ventaPapel_extranjera_registrar;
    private javax.swing.JCheckBox ventaPapel_modificar_dex;
    private javax.swing.JCheckBox ventaPapel_nacional_editar;
    private javax.swing.JCheckBox ventaPapel_nacional_registrar;
    private javax.swing.JCheckBox venta_anular;
    private javax.swing.JCheckBox venta_consultar;
    private javax.swing.JCheckBox venta_extranjera_editar;
    private javax.swing.JCheckBox venta_extranjera_registrar;
    private javax.swing.JCheckBox venta_modificar_dex;
    private javax.swing.JCheckBox venta_nacional_editar;
    private javax.swing.JCheckBox venta_nacional_registrar;
    // End of variables declaration//GEN-END:variables
    public void tabla(String valorConsulta) throws SQLException{
        //{"CODIGO","USER", "NOMBRE", "APELLIDO"};
        registro = new String[4]; 
        modelo = new DefaultTableModel(null, titulo);
        ControlDB_Usuario controlDB_UsuarioT = new ControlDB_Usuario();
        ArrayList<Usuario> listadoUsuario=controlDB_UsuarioT.buscarUsuarios(valorConsulta);
        for(int i =0; i< listadoUsuario.size(); i++){
            registro[0]=""+listadoUsuario.get(i).getId();
            registro[1]=""+listadoUsuario.get(i).getUser();
            registro[2]=""+listadoUsuario.get(i).getNombre();
            registro[3]=""+listadoUsuario.get(i).getApellido(); 
            modelo.addRow(registro);
            Table1.setModel(modelo);
        }
    }
    public void consultarParaActualizar (Usuario usu ) throws SQLException{
        ControlDB_PermisoUsuario controlDB_PermisoUsuario = new ControlDB_PermisoUsuario();
        ArrayList<PermisoUsuario> listadoPermisoUsuario= controlDB_PermisoUsuario.buscarPermisoUsuario(usu.getId());
        for(int i =0; i< listadoPermisoUsuario.size(); i++){     
            String descripcionPermiso=controlDB_PermisoUsuario.retornarDescripcionPermiso(listadoPermisoUsuario.get(i).getPermisos_id());
            switch(descripcionPermiso){
                case "cliente_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        cliente_registrar.setSelected(true);
                    }else{
                        cliente_registrar.setSelected(false);
                    }
                    break;
                }
                case "cliente_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        cliente_consultar.setSelected(true);
                    }else{
                        cliente_consultar.setSelected(false);
                    }
                    break;
                }
                case "cliente_actualizar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        cliente_actualizar.setSelected(true);
                    }else{
                        cliente_actualizar.setSelected(false);
                    }
                    break;
                }
                case "proveedor_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        proveedor_registrar.setSelected(true);
                    }else{
                        proveedor_registrar.setSelected(false);
                    }
                    break;
                }
                case "proveedor_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        proveedor_consultar.setSelected(true);
                    }else{
                        proveedor_consultar.setSelected(false);
                    }
                    break;
                }
                case "proveedor_actualizar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        proveedor_actualizar.setSelected(true);
                    }else{
                        proveedor_actualizar.setSelected(false);
                    }
                    break;
                }
                case "compra_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        compra_registrar.setSelected(true);
                    }else{
                        compra_registrar.setSelected(false);
                    }
                    break;
                }
                case "compra_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        compra_consultar.setSelected(true);
                    }else{
                        compra_consultar.setSelected(false);
                    }
                    break;
                }
                case "compra_anular":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        compra_anular.setSelected(true);
                    }else{
                        compra_anular.setSelected(false);
                    }
                    break;
                }
                case "compra_eliminar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        compra_eliminar.setSelected(true);
                    }else{
                        compra_eliminar.setSelected(false);
                    }
                    break;
                }                
                case "compra_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        compra_editar.setSelected(true);
                    }else{
                        compra_editar.setSelected(false);
                    }
                    break;
                }
                case "venta_extranjera_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        venta_extranjera_registrar.setSelected(true);
                    }else{
                        venta_extranjera_registrar.setSelected(false);
                    }
                    break;
                }
                case "venta_extranjera_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        venta_extranjera_editar.setSelected(true);
                    }else{
                        venta_extranjera_editar.setSelected(false);
                    }
                    break;
                }
                case "venta_nacional_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        venta_nacional_registrar.setSelected(true);
                    }else{
                        venta_nacional_registrar.setSelected(false);
                    }
                    break;
                }
                case "venta_nacional_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        venta_nacional_editar.setSelected(true);
                    }else{
                        venta_nacional_editar.setSelected(false);
                    }
                    break;
                }
                case "venta_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        venta_consultar.setSelected(true);
                    }else{
                        venta_consultar.setSelected(false);
                    }
                    break;
                }
                case "venta_anular":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        venta_anular.setSelected(true);
                    }else{
                        venta_anular.setSelected(false);
                    }
                    break;
                }
                case "venta_modificar_dex":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        venta_modificar_dex.setSelected(true);
                    }else{
                        venta_modificar_dex.setSelected(false);
                    }
                    break;
                }
                //..............................................................................
                 case "ventaElectronica_extranjera_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaElectronica_extranjera_registrar.setSelected(true);
                    }else{
                        ventaElectronica_extranjera_registrar.setSelected(false);
                    }
                    break;
                }
                case "ventaElectronica_extranjera_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaElectronica_extranjera_editar.setSelected(true);
                    }else{
                        ventaElectronica_extranjera_editar.setSelected(false);
                    }
                    break;
                }
                case "ventaElectronica_nacional_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaElectronica_nacional_registrar.setSelected(true);
                    }else{
                        ventaElectronica_nacional_registrar.setSelected(false);
                    }
                    break;
                }
                case "ventaElectronica_nacional_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaElectronica_nacional_editar.setSelected(true);
                    }else{
                        ventaElectronica_nacional_editar.setSelected(false);
                    }
                    break;
                }
                case "ventaElectronica_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaElectronica_consultar.setSelected(true);
                    }else{
                        ventaElectronica_consultar.setSelected(false);
                    }
                    break;
                }
                case "ventaElectronica_anular":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaElectronica_anular.setSelected(true);
                    }else{
                        ventaElectronica_anular.setSelected(false);
                    }
                    break;
                }
                case "ventaElectronica_modificar_dex":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaElectronica_modificar_dex.setSelected(true);
                    }else{
                        ventaElectronica_modificar_dex.setSelected(false);
                    }
                    break;
                }
                //.............................................................................
                //..............................................................................
                 case "ventaPapel_extranjera_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaPapel_extranjera_registrar.setSelected(true);
                    }else{
                        ventaPapel_extranjera_registrar.setSelected(false);
                    }
                    break;
                }
                case "ventaPapel_extranjera_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaPapel_extranjera_editar.setSelected(true);
                    }else{
                        ventaPapel_extranjera_editar.setSelected(false);
                    }
                    break;
                }
                case "ventaPapel_nacional_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaPapel_nacional_registrar.setSelected(true);
                    }else{
                        ventaPapel_nacional_registrar.setSelected(false);
                    }
                    break;
                }
                case "ventaPapel_nacional_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaPapel_nacional_editar.setSelected(true);
                    }else{
                        ventaPapel_nacional_editar.setSelected(false);
                    }
                    break;
                }
                case "ventaPapel_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaPapel_consultar.setSelected(true);
                    }else{
                        ventaPapel_consultar.setSelected(false);
                    }
                    break;
                }
                case "ventaPapel_anular":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaPapel_anular.setSelected(true);
                    }else{
                        ventaPapel_anular.setSelected(false);
                    }
                    break;
                }
                case "ventaPapel_modificar_dex":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        ventaPapel_modificar_dex.setSelected(true);
                    }else{
                        ventaPapel_modificar_dex.setSelected(false);
                    }
                    break;
                }
                //.............................................................................
                case "movimiento_camarones_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        movimiento_camarones_registrar.setSelected(true);
                    }else{
                        movimiento_camarones_registrar.setSelected(false);
                    }
                    break;
                }
                case "movimiento_camarones_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        movimiento_camarones_editar.setSelected(true);
                    }else{
                        movimiento_camarones_editar.setSelected(false);
                    }
                    break;
                }
                case "movimiento_carton_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        movimiento_carton_registrar.setSelected(true);
                    }else{
                        movimiento_carton_registrar.setSelected(false);
                    }
                    break;
                }
                case "movimiento_carton_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        movimiento_carton_editar.setSelected(true);
                    }else{
                        movimiento_carton_editar.setSelected(false);
                    }
                    break;
                }
                case "movimiento_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        movimiento_consultar.setSelected(true);
                    }else{
                        movimiento_consultar.setSelected(false);
                    }
                    break;
                }
                case "movimiento_anular":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        movimiento_anular.setSelected(true);
                    }else{
                        movimiento_anular.setSelected(false);
                    }
                    break;
                }
                case "consumo_camarones_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        consumo_camarones_registrar.setSelected(true);
                    }else{
                        consumo_camarones_registrar.setSelected(false);
                    }
                    break;
                }
                case "consumo_camarones_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        consumo_camarones_editar.setSelected(true);
                    }else{
                        consumo_camarones_editar.setSelected(false);
                    }
                    break;
                }
                case "consumo_carton_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        consumo_carton_registrar.setSelected(true);
                    }else{
                        consumo_carton_registrar.setSelected(false);
                    }
                    break;
                }
                case "consumo_carton_editar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        consumo_carton_editar.setSelected(true);
                    }else{
                        consumo_carton_editar.setSelected(false);
                    }
                    break;
                }
                case "consumo_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        consumo_consultar.setSelected(true);
                    }else{
                        consumo_consultar.setSelected(false);
                    }
                    break;
                }
                case "consumo_anular":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        consumo_anular.setSelected(true);
                    }else{
                        consumo_anular.setSelected(false);
                    }
                    break;
                }
                case "informe_anual_crear":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        informe_anual_crear.setSelected(true);
                    }else{
                        informe_anual_crear.setSelected(false);
                    }
                    break;
                }
                case "auditoria_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        auditoria_consultar.setSelected(true);
                    }else{
                        auditoria_consultar.setSelected(false);
                    }
                    break;
                }
                case "usuario_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        usuario_registrar.setSelected(true);
                    }else{
                        usuario_registrar.setSelected(false);
                    }
                    break;
                }
                case "usuario_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        usuario_consultar.setSelected(true);
                    }else{
                        usuario_consultar.setSelected(false);
                    }
                    break;
                }
                case "usuario_actualizar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        usuario_actualizar.setSelected(true);
                    }else{
                        usuario_actualizar.setSelected(false);
                    }
                    break;
                }
                case "empresa_local_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        empresa_local_registrar.setSelected(true);
                    }else{
                        empresa_local_registrar.setSelected(false);
                    }
                    break;
                }
                case "empresa_local_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        empresa_local_consultar.setSelected(true);
                    }else{
                        empresa_local_consultar.setSelected(false);
                    }
                    break;
                }
                case "empresa_local_actualizar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        empresa_local_actualizar.setSelected(true);
                    }else{
                        empresa_local_actualizar.setSelected(false);
                    }
                    break;
                }
                case "producto_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        producto_registrar.setSelected(true);
                    }else{
                        producto_registrar.setSelected(false);
                    }
                    break;
                }
                case "producto_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        producto_consultar.setSelected(true);
                    }else{
                        producto_consultar.setSelected(false);
                    }
                    break;
                }
                case "producto_actualizar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        producto_actualizar.setSelected(true);
                    }else{
                        producto_actualizar.setSelected(false);
                    }
                    break;
                }
                case "unidad_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        unidad_registrar.setSelected(true);
                    }else{
                        unidad_registrar.setSelected(false);
                    }
                    break;
                }
                case "unidad_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        unidad_consultar.setSelected(true);
                    }else{
                        unidad_consultar.setSelected(false);
                    }
                    break;
                }
                case "unidad_actualizar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        unidad_actualizar.setSelected(true);
                    }else{
                        unidad_actualizar.setSelected(false);
                    }
                    break;
                }
                case "bodega_registrar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        bodega_registrar.setSelected(true);
                    }else{
                        bodega_registrar.setSelected(false);
                    }
                    break;
                }
                case "bodega_consultar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        bodega_consultar.setSelected(true);
                    }else{
                        bodega_consultar.setSelected(false);
                    }
                    break;
                }
                case "bodega_actualizar":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        bodega_actualizar.setSelected(true);
                    }else{
                        bodega_actualizar.setSelected(false);
                    }
                    break;
                }
                case "parametros_permisos_usuarios":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        parametros_permisos_usuarios.setSelected(true);
                    }else{
                        parametros_permisos_usuarios.setSelected(false);
                    }
                    break;
                }
                case "parametros_permisos_menu":{
                    if(listadoPermisoUsuario.get(i).getEstado()==1){
                        parametros_permisos_menu.setSelected(true);
                    }else{
                        parametros_permisos_menu.setSelected(false);
                    }
                    break;
                }default:{
                    break;
                }
            }
        }
                    
        }
}    

